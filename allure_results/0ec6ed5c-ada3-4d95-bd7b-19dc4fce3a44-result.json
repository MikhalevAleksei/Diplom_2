{"name": "Test make order with registration and with ingredients", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <Diplom_2.tests.test_make_order.TestMakeOrder object at 0x1079125d0>, user_registration = None\n\n    @allure.title('Test make order with registration and with ingredients')\n    def test_make_order_with_registration_and_ingredients(self,\n                                                          user_registration):\n        ingredient_hash_data = {\n            \"ingredients\": [\"60d3b41abdacab0026a733c6\",\n                            \"609646e4dc916e00276b2870\"]\n        }\n        response = requests.post(\n            f'{Urls.MAIN_URL}{Handlers.MAKE_ORDER}', data=ingredient_hash_data)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntests/test_make_order.py:27: AssertionError"}, "start": 1703667609531, "stop": 1703667609671, "uuid": "de83ce4c-85d7-4188-9ff0-1337454b4395", "historyId": "854238216a17099c260879b778cb4530", "testCaseId": "854238216a17099c260879b778cb4530", "fullName": "tests.test_make_order.TestMakeOrder#test_make_order_with_registration_and_ingredients", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_make_order"}, {"name": "subSuite", "value": "TestMakeOrder"}, {"name": "host", "value": "MacBook-Air-Aleksej.local"}, {"name": "thread", "value": "7767-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_make_order"}]}